2017-12-08 23:53:25
Full thread dump Java HotSpot(TM) 64-Bit Server VM (25.151-b12 mixed mode):

"Attach Listener" #14 daemon prio=9 os_prio=0 tid=0x00007fbbb8001000 nid=0x5488 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"pool-1-thread-1" #13 prio=5 os_prio=0 tid=0x00007fbc0423d000 nid=0x5116 waiting for monitor entry [0x00007fbbdd21e000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at com.tora.model.AbstractProcessor.process(AbstractProcessor.java:43)
	- waiting to lock <0x00000000d7140b88> (a java.lang.Object)
	at com.tora.model.Service.lambda$recover$1(Service.java:105)
	at com.tora.model.Service$$Lambda$1/1442045361.run(Unknown Source)
	at com.tora.model.PendingRequests.run(PendingRequests.java:94)
	at com.tora.model.Service.recover(Service.java:105)
	at com.tora.test.StressTest$$Lambda$4/971257846.accept(Unknown Source)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.IntPipeline$4$1.accept(IntPipeline.java:250)
	at java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:110)
	at java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:693)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at com.tora.test.StressTest.lambda$main$1(JcStressTest.java:37)
	at com.tora.test.StressTest$$Lambda$2/346861221.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

"Service Thread" #12 daemon prio=9 os_prio=0 tid=0x00007fbc040df000 nid=0x50f2 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C1 CompilerThread3" #11 daemon prio=9 os_prio=0 tid=0x00007fbc040db800 nid=0x50f1 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread2" #10 daemon prio=9 os_prio=0 tid=0x00007fbc040d9800 nid=0x50f0 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread1" #9 daemon prio=9 os_prio=0 tid=0x00007fbc040d7800 nid=0x50ef waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #8 daemon prio=9 os_prio=0 tid=0x00007fbc040d5000 nid=0x50ee waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JDWP Command Reader" #7 daemon prio=10 os_prio=0 tid=0x00007fbbbc001000 nid=0x50ed runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JDWP Event Helper Thread" #6 daemon prio=10 os_prio=0 tid=0x00007fbc040d2800 nid=0x50eb runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JDWP Transport Listener: dt_socket" #5 daemon prio=10 os_prio=0 tid=0x00007fbc040cf000 nid=0x50e9 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Signal Dispatcher" #4 daemon prio=9 os_prio=0 tid=0x00007fbc040c0000 nid=0x50e8 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Finalizer" #3 daemon prio=8 os_prio=0 tid=0x00007fbc04090000 nid=0x50df in Object.wait() [0x00007fbbddfc5000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000d6d88ec8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
	- locked <0x00000000d6d88ec8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)

"Reference Handler" #2 daemon prio=10 os_prio=0 tid=0x00007fbc0408b800 nid=0x50dd in Object.wait() [0x00007fbbde0c6000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000d6d86b68> (a java.lang.ref.Reference$Lock)
	at java.lang.Object.wait(Object.java:502)
	at java.lang.ref.Reference.tryHandlePending(Reference.java:191)
	- locked <0x00000000d6d86b68> (a java.lang.ref.Reference$Lock)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:153)

"main" #1 prio=5 os_prio=0 tid=0x00007fbc0400e000 nid=0x50c9 waiting on condition [0x00007fbc0c4b5000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000d713bd20> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)
	at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:209)
	at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:285)
	at com.tora.model.util.LockUtils.lockIfExists(LockUtils.java:30)
	at com.tora.model.PendingRequests.requestExists(PendingRequests.java:76)
	at com.tora.model.Service$3.doProcess(Service.java:66)
	at com.tora.model.Service$3.doProcess(Service.java:63)
	at com.tora.model.AbstractProcessor.activate(AbstractProcessor.java:60)
	- locked <0x00000000d7140b88> (a java.lang.Object)
	at com.tora.model.Service.start(Service.java:82)
	at com.tora.test.StressTest.main(JcStressTest.java:43)

"VM Thread" os_prio=0 tid=0x00007fbc04084000 nid=0x50db runnable 

"GC task thread#0 (ParallelGC)" os_prio=0 tid=0x00007fbc04023000 nid=0x50cb runnable 

"GC task thread#1 (ParallelGC)" os_prio=0 tid=0x00007fbc04025000 nid=0x50cc runnable 

"GC task thread#2 (ParallelGC)" os_prio=0 tid=0x00007fbc04026800 nid=0x50cd runnable 

"GC task thread#3 (ParallelGC)" os_prio=0 tid=0x00007fbc04028800 nid=0x50ce runnable 

"GC task thread#4 (ParallelGC)" os_prio=0 tid=0x00007fbc0402a000 nid=0x50d0 runnable 

"GC task thread#5 (ParallelGC)" os_prio=0 tid=0x00007fbc0402c000 nid=0x50d2 runnable 

"GC task thread#6 (ParallelGC)" os_prio=0 tid=0x00007fbc0402d800 nid=0x50d4 runnable 

"GC task thread#7 (ParallelGC)" os_prio=0 tid=0x00007fbc0402f800 nid=0x50d7 runnable 

"VM Periodic Task Thread" os_prio=0 tid=0x00007fbc040e4000 nid=0x50f3 waiting on condition 

JNI global references: 4751


Found one Java-level deadlock:
=============================
"pool-1-thread-1":
  waiting to lock monitor 0x00007fbbc0005ea8 (object 0x00000000d7140b88, a java.lang.Object),
  which is held by "main"
"main":
  waiting for ownable synchronizer 0x00000000d713bd20, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),
  which is held by "pool-1-thread-1"

Java stack information for the threads listed above:
===================================================
"pool-1-thread-1":
	at com.tora.model.AbstractProcessor.process(AbstractProcessor.java:43)
	- waiting to lock <0x00000000d7140b88> (a java.lang.Object)
	at com.tora.model.Service.lambda$recover$1(Service.java:105)
	at com.tora.model.Service$$Lambda$1/1442045361.run(Unknown Source)
	at com.tora.model.PendingRequests.run(PendingRequests.java:94)
	at com.tora.model.Service.recover(Service.java:105)
	at com.tora.test.StressTest$$Lambda$4/971257846.accept(Unknown Source)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.IntPipeline$4$1.accept(IntPipeline.java:250)
	at java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:110)
	at java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:693)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at com.tora.test.StressTest.lambda$main$1(JcStressTest.java:37)
	at com.tora.test.StressTest$$Lambda$2/346861221.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
"main":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000d713bd20> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)
	at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:209)
	at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:285)
	at com.tora.model.util.LockUtils.lockIfExists(LockUtils.java:30)
	at com.tora.model.PendingRequests.requestExists(PendingRequests.java:76)
	at com.tora.model.Service$3.doProcess(Service.java:66)
	at com.tora.model.Service$3.doProcess(Service.java:63)
	at com.tora.model.AbstractProcessor.activate(AbstractProcessor.java:60)
	- locked <0x00000000d7140b88> (a java.lang.Object)
	at com.tora.model.Service.start(Service.java:82)
	at com.tora.test.StressTest.main(JcStressTest.java:43)

Found 1 deadlock.

